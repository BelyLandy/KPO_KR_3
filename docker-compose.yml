version: "3.9"

volumes:
  orders_db_data:
  payments_db_data:

services:
  orders_db:
    image: postgres:17-alpine
    container_name: orders_db
    restart: unless-stopped
    environment:
      POSTGRES_USER:     user
      POSTGRES_PASSWORD: password
      POSTGRES_DB:       order_db
    volumes:
      - orders_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d order_db -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  payments_db:
    image: postgres:17-alpine
    container_name: payments_db
    restart: unless-stopped
    environment:
      POSTGRES_USER:     user
      POSTGRES_PASSWORD: password
      POSTGRES_DB:       payment_db
    volumes:
      - payments_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d payment_db -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  broker:
    image: apache/kafka:latest
    container_name: broker
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9094:9094"
    healthcheck:
      test: ["CMD-SHELL",
             "./opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 > /dev/null 2>&1"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: k-ui
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
    depends_on:
      broker:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: gateway
    volumes:
      - ./api_gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - order_service
      - payment_service

  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: order_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      orders_db:
        condition: service_healthy
      broker:
        condition: service_healthy

  payment_service:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    container_name: payment_service
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      payments_db:
        condition: service_healthy
      broker:
        condition: service_healthy
